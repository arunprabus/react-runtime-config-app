name: Build and Push Health API

on:
  push:
    branches: [ main, develop, test ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, test, prod]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: health_app_${{ matrix.env }}
          MYSQL_USER: health_user
          MYSQL_PASSWORD: health_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      env:
        APP_ENV: ${{ matrix.env }}
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USER: health_user
        DB_PASSWORD: health_password
        DB_NAME: health_app_${{ matrix.env }}
        JWT_SECRET: test-secret-key
      run: npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        env: [dev, test, prod]
        include:
          - env: dev
            branch: develop
          - env: test
            branch: test
          - env: prod
            branch: main

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ matrix.env }}
          type=raw,value=${{ matrix.env }}-{{sha}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      if: github.ref == format('refs/heads/{0}', matrix.branch) || github.event_name == 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          APP_ENV=${{ matrix.env }}
        cache-from: type=gha
        cache-to: type=gha,mode=max